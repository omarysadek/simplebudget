version: '3.6'
services:
  composer:
    #build: ./docker/api
    image: omarsadek/simplebudget_api
    container_name: composer
    volumes:
      - ./codebase:/var/www/html
    command: composer install
  api:
    #build: ./docker/api
    image: omarsadek/simplebudget_api
    container_name: api
    ports:
      - '0008:80'
    volumes:
      - ./codebase:/var/www/html
    healthcheck:
      test: ["CMD-SHELL", "curl -I -s -L http://127.0.0.1:80 || exit 1"]
      interval: 15s
      retries: 10
    restart: always
#  postgres:
#    image: postgres:10.3
#    container_name: postgres
#    ports:
#      - '1008:5432'
#    environment:
#      POSTGRES_USER: dev
#      POSTGRES_PASSWORD: dev
#      POSTGRES_DB: dev
#    healthcheck:
#      test: ["CMD-SHELL", "pg_isready --username=dev --host=postgres --port=5432"]
#      interval: 15s
#      timeout: 5s
#      retries: 10
#    volumes:
#      - ./docker/postgres/config/init_tables.sql:/docker-entrypoint-initdb.d/1-init_table.sql
#    restart: always
#  redis:
#    image: redis:4.0
#    container_name: redis
#    ports:
#      - '2008:6379'
#  adminer:
#    image: adminer:4.6.2
#    container_name: adminer
#    ports:
#      - 3008:8080
#    healthcheck:
#      test: ["CMD-SHELL", "curl -I -s -L http://127.0.0.1:8080 || exit 1"]
#      interval: 15s
#      retries: 10
#    restart: always
#  redis-commander:
#    image: rediscommander/redis-commander:latest
#    container_name: redis-commander
#    ports:
#      - 4008:8081
#    environment:
#    - REDIS_HOSTS=local:172.19.100.132:679
#    restart: always
