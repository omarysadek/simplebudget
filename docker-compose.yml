version: '3.4'
services:
  postgres:
    image: postgres:10.4
    container_name: postgres
    ports:
      - '8200:5432'
    environment:
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: dev
      POSTGRES_DB: simplebudget
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --username=dev --host=postgres --port=5432"]
      interval: 1m
      timeout: 20s
      retries: 3
    volumes:
      - ./docker/postgres/config/init_tables.sql:/docker-entrypoint-initdb.d/1-init_table.sql
    restart: always
  api:
    #build: ./docker/api
    image: omarsadek/simplebudget_api
    container_name: api
    ports:
      - '8100:80'
    volumes:
      - ./codebase:/var/www/html
    healthcheck:
      test: ["CMD-SHELL", "curl -I -s -L http://127.0.0.1:80 || exit 1"]
      interval: 1m
      timeout: 20s
      retries: 3
    restart: always
  init_api:
    #build: ./docker/api
    image: omarsadek/simplebudget_api
    container_name: init_api
    volumes:
      - ./codebase:/var/www/html
      - ./docker/api/init_api.sh:/usr/local/bin/init_api.sh
    depends_on:
      - api
      - postgres
    command:
      - init_api.sh
  adminer:
    image: adminer:4.6.2
    container_name: adminer
    ports:
      - 8400:8080
    healthcheck:
      test: ["CMD-SHELL", "curl -I -s -L http://127.0.0.1:8080 || exit 1"]
      interval: 1m
      timeout: 20s
      retries: 3
    restart: always

#  redis:
#    image: redis:4.0
#    container_name: redis
#    ports:
#      - '8300:6379'
#  redis-commander:
#    image: rediscommander/redis-commander:latest
#    container_name: redis-commander
#    ports:
#      - 8500:8081
#    environment:
#    - REDIS_HOSTS=local:172.19.100.132:679
#    restart: always